{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danie\\\\Desktop\\\\project\\\\FE\\\\src\\\\components\\\\Cart\\\\Checkout.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from 'react';\nimport classes from './Checkout.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isEmpty = value => value.trim() === ''; //const isFiveChars = (value) => value.trim().length === 5;\n\n\nconst Checkout = props => {\n  _s();\n\n  const [formInputsValidity, setFormInputsValidity] = useState({\n    name: true // street: true,\n    // city: true,\n    // postalCode: true,\n\n  });\n  const nameInputRef = useRef(); // const streetInputRef = useRef();\n  // const postalCodeInputRef = useRef();\n  // const cityInputRef = useRef();\n\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value; // const enteredStreet = streetInputRef.current.value;\n    // const enteredPostalCode = postalCodeInputRef.current.value;\n    // const enteredCity = cityInputRef.current.value;\n\n    const enteredNameIsValid = !isEmpty(enteredName); // const enteredStreetIsValid = !isEmpty(enteredStreet);\n    // const enteredCityIsValid = !isEmpty(enteredCity);\n    // const enteredPostalCodeIsValid = isFiveChars(enteredPostalCode);\n\n    setFormInputsValidity({\n      name: enteredNameIsValid // street: enteredStreetIsValid,\n      // city: enteredCityIsValid,\n      // postalCode: enteredPostalCodeIsValid,\n\n    });\n    const formIsValid = enteredNameIsValid; //&&\n    // enteredStreetIsValid &&\n    // enteredCityIsValid &&\n    // enteredPostalCodeIsValid;\n\n    if (!formIsValid) {\n      return;\n    }\n\n    props.onConfirm({\n      name: enteredName // street: enteredStreet,\n      // city: enteredCity,\n      // postalCode: enteredPostalCode,\n\n    });\n  };\n\n  const nameControlClasses = `${classes.control} ${formInputsValidity.name ? '' : classes.invalid}`; // const streetControlClasses = `${classes.control} ${\n  //   formInputsValidity.street ? '' : classes.invalid\n  // }`;\n  // const postalCodeControlClasses = `${classes.control} ${\n  //   formInputsValidity.postalCode ? '' : classes.invalid\n  // }`;\n  // const cityControlClasses = `${classes.control} ${\n  //   formInputsValidity.city ? '' : classes.invalid\n  // }`;\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Seat Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), !formInputsValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid seat name!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checkout, \"xJmzTQ1lbfZ70F5i1XDsU8Ms8Pg=\");\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"names":["useRef","useState","classes","isEmpty","value","trim","Checkout","props","formInputsValidity","setFormInputsValidity","name","nameInputRef","confirmHandler","event","preventDefault","enteredName","current","enteredNameIsValid","formIsValid","onConfirm","nameControlClasses","control","invalid","form","actions","onCancel","submit"],"sources":["C:/Users/danie/Desktop/project/FE/src/components/Cart/Checkout.js"],"sourcesContent":["import { useRef, useState } from 'react';\r\n\r\nimport classes from './Checkout.module.css';\r\n\r\nconst isEmpty = (value) => value.trim() === '';\r\n//const isFiveChars = (value) => value.trim().length === 5;\r\n\r\nconst Checkout = (props) => {\r\n  const [formInputsValidity, setFormInputsValidity] = useState({\r\n    name: true,\r\n    // street: true,\r\n    // city: true,\r\n    // postalCode: true,\r\n  });\r\n\r\n  const nameInputRef = useRef();\r\n  // const streetInputRef = useRef();\r\n  // const postalCodeInputRef = useRef();\r\n  // const cityInputRef = useRef();\r\n\r\n  const confirmHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const enteredName = nameInputRef.current.value;\r\n    // const enteredStreet = streetInputRef.current.value;\r\n    // const enteredPostalCode = postalCodeInputRef.current.value;\r\n    // const enteredCity = cityInputRef.current.value;\r\n\r\n    const enteredNameIsValid = !isEmpty(enteredName);\r\n    // const enteredStreetIsValid = !isEmpty(enteredStreet);\r\n    // const enteredCityIsValid = !isEmpty(enteredCity);\r\n    // const enteredPostalCodeIsValid = isFiveChars(enteredPostalCode);\r\n\r\n    setFormInputsValidity({\r\n      name: enteredNameIsValid,\r\n      // street: enteredStreetIsValid,\r\n      // city: enteredCityIsValid,\r\n      // postalCode: enteredPostalCodeIsValid,\r\n    });\r\n\r\n    const formIsValid =\r\n      enteredNameIsValid //&&\r\n      // enteredStreetIsValid &&\r\n      // enteredCityIsValid &&\r\n      // enteredPostalCodeIsValid;\r\n\r\n    if (!formIsValid) {\r\n      return;\r\n    }\r\n\r\n    props.onConfirm({\r\n      name: enteredName,\r\n      // street: enteredStreet,\r\n      // city: enteredCity,\r\n      // postalCode: enteredPostalCode,\r\n    });\r\n  };\r\n\r\n  const nameControlClasses = `${classes.control} ${\r\n    formInputsValidity.name ? '' : classes.invalid\r\n  }`;\r\n  // const streetControlClasses = `${classes.control} ${\r\n  //   formInputsValidity.street ? '' : classes.invalid\r\n  // }`;\r\n  // const postalCodeControlClasses = `${classes.control} ${\r\n  //   formInputsValidity.postalCode ? '' : classes.invalid\r\n  // }`;\r\n  // const cityControlClasses = `${classes.control} ${\r\n  //   formInputsValidity.city ? '' : classes.invalid\r\n  // }`;\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={confirmHandler}>\r\n      <div className={nameControlClasses}>\r\n        <label htmlFor='name'>Seat Name</label>\r\n        <input type='text' id='name' ref={nameInputRef} />\r\n        {!formInputsValidity.name && <p>Please enter a valid seat name!</p>}\r\n      </div>\r\n      {/* <div className={streetControlClasses}>\r\n        <label htmlFor='street'>Street</label>\r\n        <input type='text' id='street' ref={streetInputRef} />\r\n        {!formInputsValidity.street && <p>Please enter a valid street!</p>}\r\n      </div>\r\n      <div className={postalCodeControlClasses}>\r\n        <label htmlFor='postal'>Postal Code</label>\r\n        <input type='text' id='postal' ref={postalCodeInputRef} />\r\n        {!formInputsValidity.postalCode && (\r\n          <p>Please enter a valid postal code (5 characters long)!</p>\r\n        )}\r\n      </div>\r\n      <div className={cityControlClasses}>\r\n        <label htmlFor='city'>City</label>\r\n        <input type='text' id='city' ref={cityInputRef} />\r\n        {!formInputsValidity.city && <p>Please enter a valid city!</p>}\r\n      </div> */}\r\n      <div className={classes.actions}>\r\n        <button type='button' onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button className={classes.submit}>Confirm</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;AAEA,OAAOC,OAAP,MAAoB,uBAApB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAWA,KAAK,CAACC,IAAN,OAAiB,EAA5C,C,CACA;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;EAAA;;EAC1B,MAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8CR,QAAQ,CAAC;IAC3DS,IAAI,EAAE,IADqD,CAE3D;IACA;IACA;;EAJ2D,CAAD,CAA5D;EAOA,MAAMC,YAAY,GAAGX,MAAM,EAA3B,CAR0B,CAS1B;EACA;EACA;;EAEA,MAAMY,cAAc,GAAIC,KAAD,IAAW;IAChCA,KAAK,CAACC,cAAN;IAEA,MAAMC,WAAW,GAAGJ,YAAY,CAACK,OAAb,CAAqBZ,KAAzC,CAHgC,CAIhC;IACA;IACA;;IAEA,MAAMa,kBAAkB,GAAG,CAACd,OAAO,CAACY,WAAD,CAAnC,CARgC,CAShC;IACA;IACA;;IAEAN,qBAAqB,CAAC;MACpBC,IAAI,EAAEO,kBADc,CAEpB;MACA;MACA;;IAJoB,CAAD,CAArB;IAOA,MAAMC,WAAW,GACfD,kBADF,CApBgC,CAqBX;IACnB;IACA;IACA;;IAEF,IAAI,CAACC,WAAL,EAAkB;MAChB;IACD;;IAEDX,KAAK,CAACY,SAAN,CAAgB;MACdT,IAAI,EAAEK,WADQ,CAEd;MACA;MACA;;IAJc,CAAhB;EAMD,CApCD;;EAsCA,MAAMK,kBAAkB,GAAI,GAAElB,OAAO,CAACmB,OAAQ,IAC5Cb,kBAAkB,CAACE,IAAnB,GAA0B,EAA1B,GAA+BR,OAAO,CAACoB,OACxC,EAFD,CAnD0B,CAsD1B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACE;IAAM,SAAS,EAAEpB,OAAO,CAACqB,IAAzB;IAA+B,QAAQ,EAAEX,cAAzC;IAAA,wBACE;MAAK,SAAS,EAAEQ,kBAAhB;MAAA,wBACE;QAAO,OAAO,EAAC,MAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAO,IAAI,EAAC,MAAZ;QAAmB,EAAE,EAAC,MAAtB;QAA6B,GAAG,EAAET;MAAlC;QAAA;QAAA;QAAA;MAAA,QAFF,EAGG,CAACH,kBAAkB,CAACE,IAApB,iBAA4B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAH/B;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAuBE;MAAK,SAAS,EAAER,OAAO,CAACsB,OAAxB;MAAA,wBACE;QAAQ,IAAI,EAAC,QAAb;QAAsB,OAAO,EAAEjB,KAAK,CAACkB,QAArC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAIE;QAAQ,SAAS,EAAEvB,OAAO,CAACwB,MAA3B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAJF;IAAA;MAAA;MAAA;MAAA;IAAA,QAvBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAgCD,CAhGD;;GAAMpB,Q;;KAAAA,Q;AAkGN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}